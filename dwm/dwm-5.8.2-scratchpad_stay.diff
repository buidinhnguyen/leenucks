--- dwm-5.8.2.orig/dwm.c.orig	2011-01-28 13:50:27.499459418 +0100
+++ dwm-5.8.2.patched/dwm.c	2011-01-28 13:55:30.403301229 +0100
@@ -237,6 +237,7 @@
 static void tile(Monitor *);
 static void togglebar(const Arg *arg);
 static void togglefloating(const Arg *arg);
+static void togglescratch(const Arg *arg);
 static void toggletag(const Arg *arg);
 static void toggleview(const Arg *arg);
 static void unfocus(Client *c, Bool setfocus);
@@ -293,6 +294,8 @@
 /* configuration, allows nested code to access above variables */
 #include "config.h"
 
+static unsigned int scratchtag = 1 << LENGTH(tags); /* This tag specially for you, Scratchpad. */
+
 /* compile-time check if all tags fit into an unsigned int bit array. */
 struct NumTags { char limitexceeded[LENGTH(tags) > 31 ? -1 : 1]; };
 
@@ -1159,6 +1162,16 @@
 		           && (c->x + (c->w / 2) < c->mon->wx + c->mon->ww)) ? bh : c->mon->my);
 		c->bw = borderpx;
 	}
+  if(strcmp(c->name, scratchpadname) == 0) {
+    c->tags = scratchtag;
+    c->isfloating = True;
+    c->x = (c->mon->mw - c->w) / 2;
+    c->y = (c->mon->mh - c->h) / 2;
+    c->mon->tagset[c->mon->seltags] |= c->tags;
+  }
+  else { /* make sure non-scratchpads stay out of scratchtag */
+    c->tags &= TAGMASK;
+  }
 	wc.border_width = c->bw;
 	XConfigureWindow(dpy, w, CWBorderWidth, &wc);
 	XSetWindowBorder(dpy, w, dc.colors[0][ColBorder]);
@@ -1707,6 +1720,24 @@
 }
 
 void
+togglescratch(const Arg *arg) {
+  Client *c = NULL;
+  unsigned int found = 0;
+  /* check if a scratchpad is already there in scratchtag */
+  for(c = selmon->clients; c && !(found = c->tags & scratchtag); c = c->next);
+  if(!found) { /* not found: launch it and put it in its tag (see manage()) */
+    spawn(arg);
+    return;
+  }
+  unsigned int newtagset = selmon->tagset[selmon->seltags] ^ scratchtag;
+  if(newtagset) {
+    selmon->tagset[selmon->seltags] = newtagset;
+    arrange(selmon);
+  }
+  focus(c);
+}
+
+void
 toggletag(const Arg *arg) {
 	unsigned int newtags;
 
@@ -1982,11 +2013,13 @@
 
 void
 view(const Arg *arg) {
-	if((arg->ui & TAGMASK) == selmon->tagset[selmon->seltags])
-		return;
+  if((arg->ui & TAGMASK) == (selmon->tagset[selmon->seltags] & TAGMASK))
+    return;
+  unsigned int stag = (selmon->tagset[selmon->seltags] & scratchtag);
 	selmon->seltags ^= 1; /* toggle sel tagset */
 	if(arg->ui & TAGMASK)
 		selmon->tagset[selmon->seltags] = arg->ui & TAGMASK;
+  selmon->tagset[selmon->seltags] |= stag;
 	arrange(selmon);
 }
 
